===================================================
0
===================================================
0
===================================================
0
===================================================
0
===================================================
1000
===================================================
0
===================================================
100
===================================================
'test right outer join: on join conditions'    
test right outer join: on join conditions     

Query plan:
sscan
    class: dual node[?]
    cost:  ? card ?
Query stmt:
select 'test right outer join: on join conditions' from dual dual
===================================================
count(*)    
100     

Query plan:
nl-join (left outer join)
    edge:  term[?]
    outer: sscan
               class: tbl_b node[?]
               cost:  ? card ?
    inner: sscan
               class: tbl_a node[?]
               sargs: term[?] AND term[?]
               cost:  ? card ?
    during:term[?]
    cost:  ? card ?
Query stmt:
select count(*) from tbl_a tbl_a right outer join tbl_b tbl_b on fn_string(tbl_b.y)='?' and tbl_a.x=tbl_b.x
===================================================
count(*)    
100     

Query plan:
nl-join (left outer join)
    edge:  term[?]
    outer: sscan
               class: tbl_b node[?]
               cost:  ? card ?
    inner: sscan
               class: tbl_a node[?]
               sargs: term[?] AND term[?]
               cost:  ? card ?
    during:term[?]
    cost:  ? card ?
Query stmt:
select count(*) from tbl_a tbl_a right outer join tbl_b tbl_b on tbl_b.y= ?:?  and tbl_a.x=tbl_b.x
===================================================
'test left outer join: on join conditions'    
test left outer join: on join conditions     

Query plan:
sscan
    class: dual node[?]
    cost:  ? card ?
Query stmt:
select 'test left outer join: on join conditions' from dual dual
===================================================
count(*)    
1000     

Query plan:
nl-join (left outer join)
    edge:  term[?]
    outer: sscan
               class: tbl_a node[?]
               cost:  ? card ?
    inner: sscan
               class: tbl_b node[?]
               sargs: term[?] AND term[?]
               cost:  ? card ?
    during:term[?]
    cost:  ? card ?
Query stmt:
select count(*) from tbl_a tbl_a left outer join tbl_b tbl_b on fn_string(tbl_a.y)='?' and tbl_a.x=tbl_b.x
===================================================
count(*)    
1000     

Query plan:
nl-join (left outer join)
    edge:  term[?]
    outer: sscan
               class: tbl_a node[?]
               cost:  ? card ?
    inner: sscan
               class: tbl_b node[?]
               sargs: term[?] AND term[?]
               cost:  ? card ?
    during:term[?]
    cost:  ? card ?
Query stmt:
select count(*) from tbl_a tbl_a left outer join tbl_b tbl_b on tbl_a.y= ?:?  and tbl_a.x=tbl_b.x
===================================================
'test right outer join: on join condition and where'    
test right outer join: on join condition and where     

Query plan:
sscan
    class: dual node[?]
    cost:  ? card ?
Query stmt:
select 'test right outer join: on join condition and where' from dual dual
===================================================
count(*)    
10     

Query plan:
nl-join (left outer join)
    edge:  term[?]
    outer: sscan
               class: tbl_b node[?]
               sargs: term[?]
               cost:  ? card ?
    inner: sscan
               class: tbl_a node[?]
               sargs: term[?]
               cost:  ? card ?
    cost:  ? card ?
Query stmt:
select count(*) from tbl_a tbl_a right outer join tbl_b tbl_b on tbl_a.x=tbl_b.x where fn_string(tbl_b.y)='?'
===================================================
count(*)    
10     

Query plan:
nl-join (left outer join)
    edge:  term[?]
    outer: sscan
               class: tbl_b node[?]
               sargs: term[?]
               cost:  ? card ?
    inner: sscan
               class: tbl_a node[?]
               sargs: term[?]
               cost:  ? card ?
    cost:  ? card ?
Query stmt:
select count(*) from tbl_a tbl_a right outer join tbl_b tbl_b on tbl_a.x=tbl_b.x where tbl_b.y= ?:? 
===================================================
'test left outer join: on join condition and where'    
test left outer join: on join condition and where     

Query plan:
sscan
    class: dual node[?]
    cost:  ? card ?
Query stmt:
select 'test left outer join: on join condition and where' from dual dual
===================================================
count(*)    
10     

Query plan:
nl-join (left outer join)
    edge:  term[?]
    outer: sscan
               class: tbl_a node[?]
               sargs: term[?]
               cost:  ? card ?
    inner: sscan
               class: tbl_b node[?]
               sargs: term[?]
               cost:  ? card ?
    cost:  ? card ?
Query stmt:
select count(*) from tbl_a tbl_a left outer join tbl_b tbl_b on tbl_a.x=tbl_b.x where fn_string(tbl_a.y)='?'
===================================================
count(*)    
10     

Query plan:
nl-join (left outer join)
    edge:  term[?]
    outer: sscan
               class: tbl_a node[?]
               sargs: term[?]
               cost:  ? card ?
    inner: sscan
               class: tbl_b node[?]
               sargs: term[?]
               cost:  ? card ?
    cost:  ? card ?
Query stmt:
select count(*) from tbl_a tbl_a left outer join tbl_b tbl_b on tbl_a.x=tbl_b.x where tbl_a.y= ?:? 
===================================================
'test oracle style outer join'    
test oracle style outer join     

Query plan:
sscan
    class: dual node[?]
    cost:  ? card ?
Query stmt:
select 'test oracle style outer join' from dual dual
===================================================
count(*)    
10     

Query plan:
nl-join (left outer join)
    edge:  term[?]
    outer: sscan
               class: tbl_b node[?]
               sargs: term[?]
               cost:  ? card ?
    inner: sscan
               class: tbl_a node[?]
               sargs: term[?]
               cost:  ? card ?
    cost:  ? card ?
Query stmt:
select count(*) from tbl_a tbl_a right outer join tbl_b tbl_b on tbl_a.x=tbl_b.x where fn_string(tbl_b.y)='?'
===================================================
count(*)    
10     

Query plan:
nl-join (left outer join)
    edge:  term[?]
    outer: sscan
               class: tbl_b node[?]
               sargs: term[?]
               cost:  ? card ?
    inner: sscan
               class: tbl_a node[?]
               sargs: term[?]
               cost:  ? card ?
    cost:  ? card ?
Query stmt:
select count(*) from tbl_a tbl_a right outer join tbl_b tbl_b on tbl_a.x=tbl_b.x where tbl_b.y= ?:? 
===================================================
count(*)    
10     

Query plan:
nl-join (left outer join)
    edge:  term[?]
    outer: sscan
               class: tbl_a node[?]
               sargs: term[?]
               cost:  ? card ?
    inner: sscan
               class: tbl_b node[?]
               sargs: term[?]
               cost:  ? card ?
    cost:  ? card ?
Query stmt:
select count(*) from tbl_a tbl_a left outer join tbl_b tbl_b on tbl_a.x=tbl_b.x where fn_string(tbl_a.y)='?'
===================================================
count(*)    
10     

Query plan:
nl-join (left outer join)
    edge:  term[?]
    outer: sscan
               class: tbl_a node[?]
               sargs: term[?]
               cost:  ? card ?
    inner: sscan
               class: tbl_b node[?]
               sargs: term[?]
               cost:  ? card ?
    cost:  ? card ?
Query stmt:
select count(*) from tbl_a tbl_a left outer join tbl_b tbl_b on tbl_a.x=tbl_b.x where tbl_a.y= ?:? 
===================================================
'test cross join'    
test cross join     

Query plan:
sscan
    class: dual node[?]
    cost:  ? card ?
Query stmt:
select 'test cross join' from dual dual
===================================================
count(*)    
1000     

Query plan:
nl-join (cross join)
    outer: sscan
               class: tbl_a node[?]
               sargs: term[?]
               cost:  ? card ?
    inner: sscan
               class: tbl_b node[?]
               cost:  ? card ?
    cost:  ? card ?
Query stmt:
select count(*) from tbl_a tbl_a cross join tbl_b tbl_b where fn_string(tbl_a.y)='?'
===================================================
count(*)    
1000     

Query plan:
nl-join (cross join)
    outer: sscan
               class: tbl_a node[?]
               sargs: term[?]
               cost:  ? card ?
    inner: sscan
               class: tbl_b node[?]
               cost:  ? card ?
    cost:  ? card ?
Query stmt:
select count(*) from tbl_a tbl_a cross join tbl_b tbl_b where tbl_a.y= ?:? 
===================================================
count(*)    
1000     

Query plan:
nl-join (cross join)
    outer: sscan
               class: tbl_a node[?]
               sargs: term[?]
               cost:  ? card ?
    inner: sscan
               class: tbl_b node[?]
               cost:  ? card ?
    cost:  ? card ?
Query stmt:
select count(*) from tbl_a tbl_a cross join tbl_b tbl_b where fn_string(tbl_a.y)='?'
===================================================
count(*)    
1000     

Query plan:
nl-join (cross join)
    outer: sscan
               class: tbl_a node[?]
               sargs: term[?]
               cost:  ? card ?
    inner: sscan
               class: tbl_b node[?]
               cost:  ? card ?
    cost:  ? card ?
Query stmt:
select count(*) from tbl_a tbl_a cross join tbl_b tbl_b where tbl_a.y= ?:? 
===================================================
'test natural join'    
test natural join     

Query plan:
sscan
    class: dual node[?]
    cost:  ? card ?
Query stmt:
select 'test natural join' from dual dual
===================================================
count(*)    
0     

Query plan:
nl-join (inner join)
    edge:  term[?] AND term[?] AND term[?]
    outer: sscan
               class: tbl_a node[?]
               sargs: term[?]
               cost:  ? card ?
    inner: sscan
               class: tbl_b node[?]
               sargs: term[?] AND term[?] AND term[?]
               cost:  ? card ?
    cost:  ? card ?
Query stmt:
select count(*) from tbl_a tbl_a,  natural tbl_b tbl_b where fn_string(tbl_a.y)='?' and tbl_a.x=tbl_b.x and tbl_a.y=tbl_b.y and tbl_a.z=tbl_b.z
===================================================
count(*)    
0     

Query plan:
nl-join (inner join)
    edge:  term[?] AND term[?]
    outer: sscan
               class: tbl_a node[?]
               sargs: term[?]
               cost:  ? card ?
    inner: sscan
               class: tbl_b node[?]
               sargs: term[?] AND term[?] AND term[?]
               cost:  ? card ?
    cost:  ? card ?
Query stmt:
select count(*) from tbl_a tbl_a,  natural tbl_b tbl_b where tbl_a.x=tbl_b.x and tbl_a.z=tbl_b.z and tbl_b.y= ?:?  and tbl_a.y= ?:?  and tbl_a.y=tbl_b.y
===================================================
count(*)    
100     

Query plan:
nl-join (inner join)
    edge:  term[?]
    outer: sscan
               class: tbl_a node[?]
               cost:  ? card ?
    inner: sscan
               class: tbl_b node[?]
               sargs: term[?]
               cost:  ? card ?
    cost:  ? card ?
Query stmt:
select count(*) from tbl_a tbl_a, tbl_b tbl_b where tbl_a.x= cast(fn_string(tbl_b.x) as double)
===================================================
count(*)    
100     

Query plan:
nl-join (inner join)
    edge:  term[?]
    outer: sscan
               class: tbl_a node[?]
               cost:  ? card ?
    inner: sscan
               class: tbl_b node[?]
               sargs: term[?]
               cost:  ? card ?
    cost:  ? card ?
Query stmt:
select count(*) from tbl_a tbl_a, tbl_b tbl_b where tbl_a.x=tbl_b.x
===================================================
0
===================================================
0
